{"version":3,"sources":["files/audio/click1.wav","files/audio/click2.wav","serviceWorker.js","components/common/Nav.js","components/metronome/MetronomeApp.js","components/profile/WelcomeContent.js","components/profile/RoadmapContent.js","components/common/Footer.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Nav","props","id","className","href","MetronomeApp","handleBmpChange","event","bmp","target","value","setState","startStop","state","playing","clearInterval","timer","setInterval","playClick","count","beatsPerMeasure","WeakBeat","play","StrongBeat","Audio","this","type","min","max","onChange","onClick","Component","WelcomeContent","RoadmapContent","Footer","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a44cd01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click1.7a7930a2.wav\";","module.exports = __webpack_public_path__ + \"static/media/click2.fe0ded65.wav\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport \"../../css/nav.css\";\r\n\r\nfunction Nav(props) {\r\n  return (\r\n    <nav id=\"navbar\" className=\"nav\">\r\n      <ul className=\"nav-list\">\r\n        <li>\r\n          <a href=\"#welcome-section\">About</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#roadmap\">Roadmap</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#projects\">Project</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#footer\">Contact</a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport \"../../css/metronome-app.css\";\r\nimport \"../../css/constellation-effects.css\";\r\nimport StrongBeat from \"../../files/audio/click1.wav\";\r\nimport WeakBeat from \"../../files/audio/click2.wav\";\r\n\r\n// import \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/499416/TweenLite.min.js\";\r\n\r\nclass MetronomeApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      playing: false,\r\n      count: 1,\r\n      bmp: 80,\r\n      beatsPerMeasure: 4\r\n    };\r\n\r\n    this.StrongBeat = new Audio(StrongBeat);\r\n    this.WeakBeat = new Audio(WeakBeat);\r\n  }\r\n\r\n  handleBmpChange = event => {\r\n    const bmp = event.target.value;\r\n    this.setState({ bmp });\r\n  };\r\n\r\n  //   startStop = () => {\r\n  //     this.StrongBeat.play();\r\n  //   };\r\n\r\n  startStop = () => {\r\n    if (this.state.playing) {\r\n      clearInterval(this.timer);\r\n      this.setState({\r\n        // count: ,\r\n        playing: false\r\n      });\r\n    } else {\r\n      this.timer = setInterval(this.playClick, (60 / this.state.bmp) * 1000);\r\n\r\n      this.setState(\r\n        {\r\n          count: 0,\r\n          playing: true\r\n        },\r\n        this.playClick\r\n      );\r\n    }\r\n  };\r\n\r\n  playClick = () => {\r\n    const { count, beatsPerMeasure } = this.state;\r\n\r\n    if (count % beatsPerMeasure === 0) {\r\n      this.WeakBeat.play();\r\n    } else {\r\n      this.StrongBeat.play();\r\n    }\r\n\r\n    this.setState(state => ({\r\n      count: (state.count + 1) % state.beatsPerMeasure\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    // let bmp = 60;\r\n    // let playing = false;\r\n    const { playing, bmp, count } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"projects\" className=\"container demo\">\r\n          <div className=\"content\">\r\n            <div id=\"large-header\" className=\"large-header\">\r\n              <canvas id=\"demo-canvas\"></canvas>\r\n              {/* <h1 className=\"main-title\">\r\n                <span className=\"thin\">Explore</span> Space\r\n              </h1> */}\r\n              <div className=\"metronome\">\r\n                <h1>Metronome</h1>\r\n                {/* <h2>RAWrrrrrrrrrrrrrrrrrrrrrrr!</h2> */}\r\n                <div className=\"bmp__slider\">\r\n                  <div>{bmp}&nbsp;BMP</div>\r\n                  <input\r\n                    type=\"range\"\r\n                    min=\"60\"\r\n                    max=\"240\"\r\n                    value={bmp}\r\n                    onChange={this.handleBmpChange}\r\n                  />\r\n                  {/* <div>{count}</div> */}\r\n                </div>\r\n                <button onClick={this.startStop}>\r\n                  {playing ? \"Stop\" : \"Start\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetronomeApp;\r\n","import React from \"react\";\r\nimport \"../../css/welcome.css\";\r\n\r\nfunction WelcomeContent(props) {\r\n  return (\r\n    <section className=\"container demo\">\r\n      <div className=\"content\">\r\n        <div id=\"large-header\" className=\"large-header\">\r\n          <canvas id=\"demo-canvas\"></canvas>\r\n          <div id=\"welcome-section\" className=\"main-title welcome-section\">\r\n            <h1>Hello I am Phu</h1>\r\n            <p>a web developer</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default WelcomeContent;\r\n","import React from \"react\";\r\nimport \"../../css/project.css\";\r\n\r\nfunction RoadmapContent(props) {\r\n  return (\r\n    <section id=\"roadmap\" className=\"projects-section\">\r\n      <h2 className=\"projects-section-header\">My Web Developer Roadmap</h2>\r\n      <div className=\"project-section-post\">\r\n        <p>\r\n          There are many ways you can go about picking up the skills you need to\r\n          become a developer.\r\n        </p>\r\n        <p>\r\n          There are linear curriculums that teach you a bit of everything - like\r\n          freeCodeCamp's full stack development curriculum.\r\n        </p>\r\n        <p>\r\n          And then there are massive lists of skills - and sometimes lists of\r\n          resources - you can use to \"choose your own adventure\" through the\r\n          learning process.\r\n        </p>\r\n        <p>\r\n          One of the best such list of skills is\r\n          <a href=\"https://twitter.com/kamranahmedse\">Kamran Ahmed's</a>\r\n          Developer Roadmap, which he regularly updates.\r\n        </p>\r\n        <p>\r\n          This is no ordinary list of resources. Kamran has painstakingly mapped\r\n          out all the skills he feels are essential to breaking into different\r\n          fields of development.\r\n        </p>\r\n        <p>\r\n          I've written about his roadmap in the past. And to celebrate us all\r\n          being half way into 2019, I'm going to share his entire roadmap here -\r\n          all three of them.\r\n        </p>\r\n        <p>\r\n          That's right - he has lists of tools and resources that are required\r\n          for the following paths:\r\n        </p>\r\n        <ul>\r\n          <li>Front end web development</li>\r\n          <li>Back end web development</li>\r\n          <li>\r\n            DevOps (also known as \"site reliability\" - this is sort of an\r\n            evolution of the old System Administrator role)\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <a\r\n        href=\"https://www.freecodecamp.org/news/2019-web-developer-roadmap/\"\r\n        className=\"btn btn-show-all\"\r\n        target=\"_blank\"\r\n      >\r\n        Show Details\r\n        <i className=\"fas fa-chevron-right\" />\r\n      </a>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default RoadmapContent;\r\n","import React from \"react\";\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer id=\"footer\">\r\n      <div>\r\n        <h3>Navigation</h3>\r\n        <ul>\r\n          <li>\r\n            <a href=\"#welcome-section\" className=\"btn contact-details\">\r\n              About\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#roadmap\" className=\"btn contact-details\">\r\n              Project\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#projects\" className=\"btn contact-details\">\r\n              Project\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#footer\" className=\"btn contact-details\">\r\n              Contact\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h3>Let's work together...</h3>\r\n        <h4>How do you take your coffee?</h4>\r\n        <ul>\r\n          <li>\r\n            <i className=\"far fa-envelope\" />\r\n            &nbsp;\r\n            <a\r\n              href=\"mailto:phu.duongtan@gmail.com\"\r\n              className=\"btn contact-details\"\r\n            >\r\n              phu.duongtan@gmail.com\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <i className=\"fas fa-mobile-alt\" />\r\n            &nbsp;&nbsp;\r\n            <a href=\"tel:096-873-5840\" className=\"btn contact-details\">\r\n              0968.735.840\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <i className=\"fab fa-skype\" />\r\n            &nbsp;\r\n            <a href=\"skype:phu.duongtan?chat\" className=\"btn contact-details\">\r\n              phu.duongtan\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <i className=\"fab fa-facebook-square\" />\r\n            &nbsp;\r\n            <a\r\n              href=\"https://facebook.com/duongtanphu\"\r\n              target=\"_blank\"\r\n              className=\"btn contact-details\"\r\n            >\r\n              facebook.com/duongtanphu\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport Nav from \"./components/common/Nav\";\nimport MetronomeApp from \"./components/metronome/MetronomeApp\";\nimport WelcomeContent from \"./components/profile/WelcomeContent\";\nimport RoadmapContent from \"./components/profile/RoadmapContent\";\nimport Footer from \"./components/common/Footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Nav />\n      <WelcomeContent />\n      <RoadmapContent />\n      <MetronomeApp />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import MetronomeApp from \"./metronome/MetronomeApp\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}