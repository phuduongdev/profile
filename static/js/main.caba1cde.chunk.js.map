{"version":3,"sources":["files/audio/click1.wav","files/audio/click2.wav","serviceWorker.js","components/common/Nav.js","components/metronome/MetronomeApp.js","components/common/Footer.js","components/esu-kun/DictionaryView.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Nav","Component","Footer","DictionaryView","props","detailsListStyle","marginBottom","horizon__line","opacity","margin","width","flexContainer","backgroundColor","textAlign","lineHeight","fontSize","closeButtonHandle","setState","mainBlockDisplay","detailsBlockDisplay","expandOnButtonHandle","basicBlockDisplay","expandButtonOnVisible","kunDictVisible","expandKunButtonHandle","justForTestHandle","state","className","style","color","padding","display","flexDirection","height","alignItems","verticalAlign","fontWeight","this","align","onClick","border","listStyle","marginLeft","marginRight","justifyContent","flexWrap","alignContent","visibility","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.caba1cde.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/click1.7a7930a2.wav\";","module.exports = __webpack_public_path__ + \"static/media/click2.fe0ded65.wav\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../../css/nav.css\";\r\n\r\nfunction Nav(props) {\r\n  return (\r\n    <nav id=\"navbar\" className=\"nav\">\r\n      <ul className=\"nav-list\">\r\n        <li>\r\n          <a href=\"#welcome-section\">About</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#roadmap\">Roadmap</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#projects\">Project</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#footer\">Contact</a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport \"../../css/metronome-app.css\";\r\nimport \"../../css/constellation-effects.css\";\r\nimport StrongBeat from \"../../files/audio/click1.wav\";\r\nimport WeakBeat from \"../../files/audio/click2.wav\";\r\n\r\n// import \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/499416/TweenLite.min.js\";\r\n\r\nclass MetronomeApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      playing: false,\r\n      count: 1,\r\n      bmp: 80,\r\n      beatsPerMeasure: 4\r\n    };\r\n\r\n    this.StrongBeat = new Audio(StrongBeat);\r\n    this.WeakBeat = new Audio(WeakBeat);\r\n  }\r\n\r\n  handleBmpChange = event => {\r\n    const bmp = event.target.value;\r\n    this.setState({ bmp });\r\n  };\r\n\r\n  //   startStop = () => {\r\n  //     this.StrongBeat.play();\r\n  //   };\r\n\r\n  startStop = () => {\r\n    if (this.state.playing) {\r\n      clearInterval(this.timer);\r\n      this.setState({\r\n        // count: ,\r\n        playing: false\r\n      });\r\n    } else {\r\n      this.timer = setInterval(this.playClick, (60 / this.state.bmp) * 1000);\r\n\r\n      this.setState(\r\n        {\r\n          count: 0,\r\n          playing: true\r\n        },\r\n        this.playClick\r\n      );\r\n    }\r\n  };\r\n\r\n  playClick = () => {\r\n    const { count, beatsPerMeasure } = this.state;\r\n\r\n    if (count % beatsPerMeasure === 0) {\r\n      this.WeakBeat.play();\r\n    } else {\r\n      this.StrongBeat.play();\r\n    }\r\n\r\n    this.setState(state => ({\r\n      count: (state.count + 1) % state.beatsPerMeasure\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    // let bmp = 60;\r\n    // let playing = false;\r\n    const { playing, bmp, count } = this.state;\r\n    return (\r\n      <>\r\n        <div id=\"projects\" className=\"container demo\">\r\n          <div className=\"content\">\r\n            <div id=\"large-header\" className=\"large-header\">\r\n              <canvas id=\"demo-canvas\"></canvas>\r\n              {/* <h1 className=\"main-title\">\r\n                <span className=\"thin\">Explore</span> Space\r\n              </h1> */}\r\n              <div className=\"metronome\">\r\n                <h1>Metronome</h1>\r\n                {/* <h2>RAWrrrrrrrrrrrrrrrrrrrrrrr!</h2> */}\r\n                <div className=\"bmp__slider\">\r\n                  <div>{bmp}&nbsp;BMP</div>\r\n                  <input\r\n                    type=\"range\"\r\n                    min=\"60\"\r\n                    max=\"240\"\r\n                    value={bmp}\r\n                    onChange={this.handleBmpChange}\r\n                  />\r\n                  {/* <div>{count}</div> */}\r\n                </div>\r\n                <button onClick={this.startStop}>\r\n                  {playing ? \"Stop\" : \"Start\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetronomeApp;\r\n","import React from \"react\";\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer id=\"footer\">\r\n      <div>\r\n        <h3>Navigation</h3>\r\n        <ul>\r\n          <li>\r\n            <a href=\"#welcome-section\" className=\"btn contact-details\">\r\n              About\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#roadmap\" className=\"btn contact-details\">\r\n              Project\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#projects\" className=\"btn contact-details\">\r\n              Project\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#footer\" className=\"btn contact-details\">\r\n              Contact\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h3>Let's work together...</h3>\r\n        <h4>How do you take your coffee?</h4>\r\n        <ul>\r\n          <li>\r\n            <i className=\"far fa-envelope\" />\r\n            &nbsp;\r\n            <a\r\n              href=\"mailto:phu.duongtan@gmail.com\"\r\n              className=\"btn contact-details\"\r\n            >\r\n              phu.duongtan@gmail.com\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <i className=\"fas fa-mobile-alt\" />\r\n            &nbsp;&nbsp;\r\n            <a href=\"tel:096-873-5840\" className=\"btn contact-details\">\r\n              0968.735.840\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <i className=\"fab fa-skype\" />\r\n            &nbsp;\r\n            <a href=\"skype:phu.duongtan?chat\" className=\"btn contact-details\">\r\n              phu.duongtan\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <i className=\"fab fa-globe\" />\r\n            &nbsp;\r\n            <a\r\n              href=\"https://phuduongdev.github.io/profile\"\r\n              target=\"_blank\"\r\n              className=\"btn contact-details\"\r\n            >\r\n              https://phuduongdev.github.io/profile\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","/** @format */\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass DictionaryView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainBlockDisplay: \"none\",\r\n      detailsBlockDisplay: \"\",\r\n      basicBlockDisplay: \"flex\",\r\n      expandButtonOnVisible: \"visible\",\r\n      kunDictVisible: \"hidden\",\r\n    };\r\n  }\r\n\r\n  detailsListStyle = {\r\n    marginBottom: \"10px\",\r\n  };\r\n\r\n  horizon__line = {\r\n    opacity: \"0.3\",\r\n    margin: \"2px auto\",\r\n    width: \"45%\",\r\n  };\r\n\r\n  flexContainer = {\r\n    backgroundColor: \"#f1f1f1\",\r\n    width: \"100px\",\r\n    margin: \"10px\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"75px\",\r\n    fontSize: \"30px\",\r\n  };\r\n\r\n  closeButtonHandle = () => {\r\n    this.setState({\r\n      mainBlockDisplay: \"block\",\r\n      detailsBlockDisplay: \"none\",\r\n    });\r\n  };\r\n\r\n  expandOnButtonHandle = () => {\r\n    this.setState({\r\n      basicBlockDisplay: \"none\",\r\n      expandButtonOnVisible: \"hidden\",\r\n      kunDictVisible: \"visible\",\r\n    });\r\n  };\r\n\r\n  expandKunButtonHandle = () => {\r\n    this.setState({\r\n      basicBlockDisplay: \"flex\",\r\n      expandButtonOnVisible: \"visible\",\r\n      kunDictVisible: \"hidden\",\r\n    });\r\n  };\r\n\r\n  justForTestHandle = () => {\r\n    this.setState({\r\n      mainBlockDisplay: \"none\",\r\n      detailsBlockDisplay: \"block\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* co ban */}\r\n        <div\r\n          className=\"dict__main\"\r\n          style={{\r\n            width: \"100%\",\r\n            color: \"black\",\r\n            // display: this.state.mainBlockDisplay,\r\n          }}\r\n        >\r\n          <div\r\n            className=\"dict__basic\"\r\n            style={{\r\n              padding: \"10px\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              height: \"auto\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"dict__basic__right\"\r\n              style={{\r\n                width: \"100%\",\r\n                display: \"inline-block\",\r\n              }}\r\n            >\r\n              <p\r\n                style={{\r\n                  verticalAlign: \"middle\",\r\n                  fontSize: \"68px\",\r\n                  fontWeight: \"800\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                日\r\n              </p>\r\n              <p\r\n                style={{\r\n                  fontSize: \"20px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                NHẬ<span style={{ color: \"red\" }}>T</span>\r\n              </p>\r\n              <hr style={this.horizon__line} />\r\n              <p align=\"center\">\r\n                に<span style={{ color: \"red\" }}>ち</span> 、 じ\r\n                <span style={{ color: \"red\" }}>つ</span> (にち)\r\n              </p>\r\n              <hr style={this.horizon__line} />\r\n              <p align=\"center\">Ngày, mặt trời</p>\r\n            </div>\r\n          </div>\r\n\r\n          <button onClick={this.justForTestHandle}>Use for testing</button>\r\n        </div>\r\n\r\n        {/* chi tiet co ban */}\r\n        <div\r\n          className=\"dict__details__container\"\r\n          style={{\r\n            width: \"100%\",\r\n            color: \"black\",\r\n            display: this.state.detailsBlockDisplay,\r\n          }}\r\n        >\r\n          <div\r\n            className=\"dict__basic\"\r\n            style={{\r\n              padding: \"10px\",\r\n              height: \"auto\",\r\n              alignItems: \"center\",\r\n              display: this.state.basicBlockDisplay,\r\n            }}\r\n          >\r\n            <div\r\n              className=\"dict__basic__left\"\r\n              style={{\r\n                width: \"40%\",\r\n                display: \"flex\",\r\n              }}\r\n            >\r\n              <p\r\n                style={{\r\n                  verticalAlign: \"middle\",\r\n                  fontSize: \"68px\",\r\n                  fontWeight: \"800\",\r\n                  margin: \"auto\",\r\n                }}\r\n              >\r\n                日\r\n              </p>\r\n            </div>\r\n            <div\r\n              className=\"dict__basic__right\"\r\n              style={{\r\n                width: \"59%\",\r\n                display: \"inline-block\",\r\n              }}\r\n            >\r\n              <p align=\"center\" style={{ fontSize: \"20px\" }}>\r\n                NHẬ<span style={{ color: \"red\" }}>T</span>\r\n              </p>\r\n              <hr style={this.horizon__line} />\r\n              <p align=\"center\">\r\n                に<span style={{ color: \"red\" }}>ち</span> 、 じ\r\n                <span style={{ color: \"red\" }}>つ</span> (にち)\r\n              </p>\r\n              <hr style={this.horizon__line} />\r\n              <p align=\"center\">Ngày, mặt trời</p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* tu vung am On */}\r\n          <div\r\n            className=\"on__dict__container\"\r\n            style={{\r\n              border: \"1px solid rgb(214, 214, 194)\",\r\n              padding: \"8px 0 8px 8px\",\r\n              fontSize: \"12px\",\r\n              display: \"flex\",\r\n              height: \"auto\",\r\n            }}\r\n          >\r\n            <div className=\"on__dict__content\" style={{ width: \"98%\" }}>\r\n              <ul\r\n                className=\"vocalbulary\"\r\n                style={{\r\n                  listStyle: \"circle\",\r\n                  // display: 'inline-block',\r\n                  // flexDirection: 'column',\r\n                  height: \"auto\",\r\n                  marginLeft: \"16px\",\r\n                }}\r\n              >\r\n                <li className style={this.detailsListStyle}>\r\n                  <div\r\n                    style={{\r\n                      marginRight: \"8%\",\r\n                      display: \"inline-flex\",\r\n                    }}\r\n                  >\r\n                    日:\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"inline-flex\",\r\n                    }}\r\n                  >\r\n                    NHẬT (ngày, mặt trời)\r\n                    <br />ひ\r\n                  </div>\r\n                </li>\r\n                <li style={this.detailsListStyle}>\r\n                  十日: THẬP-NHẬT (ngày 10)\r\n                  <br />\r\n                  とおか\r\n                </li>\r\n                <li style={this.detailsListStyle}>\r\n                  日本: NHẬT-BẢN (Nhật Bản)\r\n                  <br />\r\n                  ほんじつ\r\n                </li>\r\n                <li style={this.detailsListStyle}>\r\n                  本日: BẢN-NHẬT (hôm nay)\r\n                  <br />ひ\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div\r\n              className=\"right__task__bar\"\r\n              style={{\r\n                // width: \"5%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                height: \"auto\",\r\n                flexWrap: \"wrap\",\r\n                alignContent: \"space-between\",\r\n              }}\r\n            >\r\n              <div className={this.flexContainer}>\r\n                <button onClick={this.closeButtonHandle}>X</button>\r\n              </div>\r\n              <div\r\n                className={this.flexContainer}\r\n                style={{\r\n                  visibility: this.state.expandButtonOnVisible,\r\n                }}\r\n              >\r\n                <button onClick={this.expandOnButtonHandle}>v</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            className=\"kun__dict__details\"\r\n            style={{\r\n              border: \"1px solid rgb(214, 214, 194)\",\r\n              padding: \"8px 0 8px 8px\",\r\n              fontSize: \"12px\",\r\n              display: \"flex\",\r\n              height: \"auto\",\r\n              visibility: this.state.kunDictVisible,\r\n            }}\r\n          >\r\n            <div style={{ width: \"98%\" }}>\r\n              <ul\r\n                style={{\r\n                  listStyle: \"circle\",\r\n                  display: \"inline-block\",\r\n                  flexDirection: \"column\",\r\n                  height: \"auto\",\r\n                  marginLeft: \"16px\",\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    marginBottom: \"10px\",\r\n                    display: \"block\",\r\n                  }}\r\n                >\r\n                  <div style={{ width: \"5%\" }}>日:</div>\r\n                  <div style={{ width: \"5%\" }}>\r\n                    NHẬT (ngày, mặt trời)\r\n                    <br />ひ\r\n                  </div>\r\n                </li>\r\n                <li style={this.detailsListStyle}>\r\n                  十日: THẬP-NHẬT (ngày 10)\r\n                  <br />\r\n                  とおか\r\n                </li>\r\n                <li style={this.detailsListStyle}>\r\n                  日本: NHẬT-BẢN (Nhật Bản)\r\n                  <br />\r\n                  ほんじつ\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div\r\n              className=\"right__task__bar\"\r\n              style={{\r\n                // width: \"5%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                height: \"auto\",\r\n                flexWrap: \"wrap\",\r\n                alignContent: \"space-between\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{ visibility: \"hidden\" }}\r\n                className={this.flexContainer}\r\n              >\r\n                XX\r\n              </div>\r\n              <div\r\n                className={this.flexContainer}\r\n                onClick={this.expandKunButtonHandle}\r\n              >\r\n                <button>^</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DictionaryView;\r\n","import React from \"react\";\r\nimport Nav from \"./components/common/Nav\";\r\nimport MetronomeApp from \"./components/metronome/MetronomeApp\";\r\nimport WelcomeContent from \"./components/profile/WelcomeContent\";\r\nimport RoadmapContent from \"./components/profile/RoadmapContent\";\r\nimport Footer from \"./components/common/Footer\";\r\nimport DictionaryView from \"./components/esu-kun/DictionaryView\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      {/* <Nav />\r\n      <WelcomeContent />\r\n      <RoadmapContent />\r\n      <MetronomeApp />\r\n      <Footer /> */}\r\n      <DictionaryView />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n// import MetronomeApp from \"./metronome/MetronomeApp\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}